{
  "version": 3,
  "sources": ["../../react-json-view-lite/src/DataTypeDetection.ts", "../../react-json-view-lite/src/hooks.ts", "../../react-json-view-lite/src/DataRenderer.tsx", "../../react-json-view-lite/src/index.tsx"],
  "sourcesContent": ["export const isBoolean = (data: any) => {\n  return typeof data === 'boolean' || data instanceof Boolean;\n};\n\nexport const isNumber = (data: any) => {\n  return typeof data === 'number' || data instanceof Number;\n};\n\nexport const isBigInt = (data: any) => {\n  return typeof data === 'bigint' || data instanceof BigInt;\n};\n\nexport const isDate = (data: unknown): data is Date => {\n  return !!data && data instanceof Date;\n};\n\nexport const isString = (data: any) => {\n  return typeof data === 'string' || data instanceof String;\n};\n\nexport const isArray = (data: any) => {\n  return Array.isArray(data);\n};\n\nexport const isObject = (data: any) => {\n  return data instanceof Object && data !== null;\n};\n\nexport const isNull = (data: any) => {\n  return data === null;\n};\n\nexport const isUndefined = (data: any) => {\n  return data === undefined;\n};\n", "import { useState, useRef } from 'react';\n\nexport function useBool(\n  initialValueCreator: () => boolean\n): [boolean, () => void, (value: boolean) => void] {\n  const [value, setValue] = useState(initialValueCreator());\n\n  const tooggle = () => setValue((currentValue) => !currentValue);\n\n  return [value, tooggle, setValue];\n}\n\nlet componentId = 1;\nconst generateNextId = () => componentId++;\n\nexport function useComponentId() {\n  const componentId = useRef<string>();\n  if (componentId.current === undefined) {\n    componentId.current = `:jsnvw:${generateNextId()}:`;\n  }\n  return componentId.current;\n}\n", "import * as React from 'react';\nimport * as DataTypeDetection from './DataTypeDetection';\nimport { useBool, useComponentId } from './hooks';\n\nexport interface StyleProps {\n  container: string;\n  basicChildStyle: string;\n  label: string;\n  nullValue: string;\n  undefinedValue: string;\n  numberValue: string;\n  stringValue: string;\n  booleanValue: string;\n  otherValue: string;\n  punctuation: string;\n  expandIcon: string;\n  collapseIcon: string;\n  collapsedContent: string;\n}\n\nexport interface JsonRenderProps<T> {\n  field?: string;\n  value: T;\n  lastElement: boolean;\n  level: number;\n  style: StyleProps;\n  shouldExpandNode: (level: number, value: any, field?: string) => boolean;\n}\n\nexport interface ExpandableRenderProps {\n  field?: string;\n  value: Array<any> | object;\n  data: Array<[string | undefined, any]>;\n  openBracket: string;\n  closeBracket: string;\n  lastElement: boolean;\n  level: number;\n  style: StyleProps;\n  shouldExpandNode: (level: number, value: any, field?: string) => boolean;\n}\n\nfunction ExpandableObject({\n  field,\n  value,\n  data,\n  lastElement,\n  openBracket,\n  closeBracket,\n  level,\n  style,\n  shouldExpandNode\n}: ExpandableRenderProps) {\n  const shouldExpandNodeCalledRef = React.useRef(false);\n  const [expanded, toggleExpanded, setExpanded] = useBool(() =>\n    shouldExpandNode(level, value, field)\n  );\n\n  React.useEffect(() => {\n    if (!shouldExpandNodeCalledRef.current) {\n      shouldExpandNodeCalledRef.current = true;\n    } else {\n      setExpanded(shouldExpandNode(level, value, field));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [shouldExpandNode]);\n\n  const expanderIconStyle = expanded ? style.collapseIcon : style.expandIcon;\n  const ariaLabel = expanded ? 'collapse JSON' : 'expand JSON';\n  const contentsId = useComponentId();\n  const childLevel = level + 1;\n  const lastIndex = data.length - 1;\n\n  const onKeyDown = (e: React.KeyboardEvent<HTMLSpanElement>) => {\n    if (e.key === ' ') {\n      toggleExpanded();\n    }\n  };\n\n  return (\n    <div className={style.basicChildStyle} role='list'>\n      <span\n        className={expanderIconStyle}\n        onClick={toggleExpanded}\n        onKeyDown={onKeyDown}\n        role='button'\n        tabIndex={0}\n        aria-label={ariaLabel}\n        aria-expanded={expanded}\n        aria-controls={expanded ? contentsId : undefined}\n      />\n      {field && <span className={style.label}>{field}:</span>}\n      <span className={style.punctuation}>{openBracket}</span>\n\n      {expanded ? (\n        <div id={contentsId}>\n          {data.map((dataElement, index) => (\n            <DataRender\n              key={dataElement[0] || index}\n              field={dataElement[0]}\n              value={dataElement[1]}\n              style={style}\n              lastElement={index === lastIndex}\n              level={childLevel}\n              shouldExpandNode={shouldExpandNode}\n            />\n          ))}\n        </div>\n      ) : (\n        <span\n          className={style.collapsedContent}\n          onClick={toggleExpanded}\n          onKeyDown={onKeyDown}\n          role='button'\n          tabIndex={-1} // No need to be able to tab to this button, can just use the other button\n          aria-hidden={true} // No need for screen readers to see this button, they can just use the other button\n          aria-label={ariaLabel}\n          aria-expanded={expanded}\n        />\n      )}\n\n      <span className={style.punctuation}>{closeBracket}</span>\n      {!lastElement && <span className={style.punctuation}>,</span>}\n    </div>\n  );\n}\n\nfunction JsonObject({\n  field,\n  value,\n  style,\n  lastElement,\n  shouldExpandNode,\n  level\n}: JsonRenderProps<Object>) {\n  return ExpandableObject({\n    field,\n    value,\n    lastElement: lastElement || false,\n    level,\n    openBracket: '{',\n    closeBracket: '}',\n    style,\n    shouldExpandNode,\n    data: Object.keys(value).map((key) => [key, value[key as keyof typeof value]])\n  });\n}\n\nfunction JsonArray({\n  field,\n  value,\n  style,\n  lastElement,\n  level,\n  shouldExpandNode\n}: JsonRenderProps<Array<any>>) {\n  return ExpandableObject({\n    field,\n    value,\n    lastElement: lastElement || false,\n    level,\n    openBracket: '[',\n    closeBracket: ']',\n    style,\n    shouldExpandNode,\n    data: value.map((element) => [undefined, element])\n  });\n}\n\nfunction JsonPrimitiveValue({\n  field,\n  value,\n  style,\n  lastElement\n}: JsonRenderProps<string | number | boolean | Date | null | undefined>) {\n  let stringValue = value;\n  let valueStyle = style.otherValue;\n\n  if (value === null) {\n    stringValue = 'null';\n    valueStyle = style.nullValue;\n  } else if (value === undefined) {\n    stringValue = 'undefined';\n    valueStyle = style.undefinedValue;\n  } else if (DataTypeDetection.isString(value)) {\n    stringValue = `\"${value}\"`;\n    valueStyle = style.stringValue;\n  } else if (DataTypeDetection.isBoolean(value)) {\n    stringValue = value ? 'true' : 'false';\n    valueStyle = style.booleanValue;\n  } else if (DataTypeDetection.isNumber(value)) {\n    stringValue = value.toString();\n    valueStyle = style.numberValue;\n  } else if (DataTypeDetection.isBigInt(value)) {\n    stringValue = `${value.toString()}n`;\n    valueStyle = style.numberValue;\n  } else if (DataTypeDetection.isDate(value)) {\n    stringValue = value.toISOString();\n  } else {\n    stringValue = value.toString();\n  }\n\n  if (field === '') {\n    field = '\"\"';\n  }\n\n  return (\n    <div className={style.basicChildStyle} role='listitem'>\n      {field && <span className={style.label}>{field}:</span>}\n      <span className={valueStyle}>{stringValue}</span>\n      {!lastElement && <span className={style.punctuation}>,</span>}\n    </div>\n  );\n}\n\nexport default function DataRender(props: JsonRenderProps<any>) {\n  const value = props.value;\n  if (DataTypeDetection.isArray(value)) {\n    return <JsonArray {...props} />;\n  }\n\n  if (DataTypeDetection.isObject(value) && !DataTypeDetection.isDate(value)) {\n    return <JsonObject {...props} />;\n  }\n\n  return <JsonPrimitiveValue {...props} />;\n}\n", "import * as React from 'react';\nimport DataRender, { StyleProps } from './DataRenderer';\nimport styles from './styles.module.css';\n\nexport interface Props {\n  data: Object | Array<any>;\n  style?: StyleProps;\n  shouldExpandNode?: (level: number, value: any, field?: string) => boolean;\n}\n\nexport const defaultStyles: StyleProps = {\n  container: styles['container-light'],\n  basicChildStyle: styles['basic-element-style'],\n  label: styles['label-light'],\n  nullValue: styles['value-null-light'],\n  undefinedValue: styles['value-undefined-light'],\n  stringValue: styles['value-string-light'],\n  booleanValue: styles['value-boolean-light'],\n  numberValue: styles['value-number-light'],\n  otherValue: styles['value-other-light'],\n  punctuation: styles['punctuation-light'],\n  collapseIcon: styles['collapse-icon-light'],\n  expandIcon: styles['expand-icon-light'],\n  collapsedContent: styles['collapsed-content-light']\n};\n\nexport const darkStyles: StyleProps = {\n  container: styles['container-dark'],\n  basicChildStyle: styles['basic-element-style'],\n  label: styles['label-dark'],\n  nullValue: styles['value-null-dark'],\n  undefinedValue: styles['value-undefined-dark'],\n  stringValue: styles['value-string-dark'],\n  booleanValue: styles['value-boolean-dark'],\n  numberValue: styles['value-number-dark'],\n  otherValue: styles['value-other-dark'],\n  punctuation: styles['punctuation-dark'],\n  collapseIcon: styles['collapse-icon-dark'],\n  expandIcon: styles['expand-icon-dark'],\n  collapsedContent: styles['collapsed-content-dark']\n};\n\nexport const allExpanded = () => true;\nexport const collapseAllNested = (level: number) => level < 1;\n\nexport const JsonView = ({\n  data,\n  style = defaultStyles,\n  shouldExpandNode = allExpanded\n}: Props) => {\n  return (\n    <div className={style.container}>\n      <DataRender\n        value={data}\n        style={style}\n        lastElement\n        level={0}\n        shouldExpandNode={shouldExpandNode}\n      />\n    </div>\n  );\n};\n"],
  "mappings": ";;;;;;;AAAO,IAAMA,YAAaC,UAAS;AACjC,SAAO,OAAOA,SAAS,aAAaA,gBAAgBC;AACtD;AAEO,IAAMC,WAAYF,UAAS;AAChC,SAAO,OAAOA,SAAS,YAAYA,gBAAgBG;AACrD;AAEO,IAAMC,WAAYJ,UAAS;AAChC,SAAO,OAAOA,SAAS,YAAYA,gBAAgBK;AACrD;AAEO,IAAMC,SAAUN,UAAa;AAClC,SAAO,CAAC,CAACA,QAAQA,gBAAgBO;AACnC;AAEO,IAAMC,WAAYR,UAAS;AAChC,SAAO,OAAOA,SAAS,YAAYA,gBAAgBS;AACrD;AAEO,IAAMC,UAAWV,UAAS;AAC/B,SAAOW,MAAMD,QAAQV,IAAI;AAC3B;AAEO,IAAMY,WAAYZ,UAAS;AAChC,SAAOA,gBAAgBa,UAAUb,SAAS;AAC5C;SCxBgBc,QACdC,qBAAkC;AAElC,QAAM,CAACC,OAAOC,QAAQ,QAAIC,uBAASH,oBAAmB,CAAE;AAExD,QAAMI,UAAUA,MAAMF,SAAUG,kBAAiB,CAACA,YAAY;AAE9D,SAAO,CAACJ,OAAOG,SAASF,QAAQ;AAClC;AAEA,IAAII,cAAc;AAClB,IAAMC,iBAAiBA,MAAMD;AAE7B,SAAgBE,iBAAcA;AAC5B,QAAMF,mBAAcG,qBAAM;AAC1B,MAAIH,aAAYI,YAAYC,QAAW;AACrCL,IAAAA,aAAYI,UAAO,UAAaH,eAAc,CAAA;;AAEhD,SAAOD,aAAYI;AACrB;ACoBA,SAASE,iBAAgBC,MAAA;MAAC;IACxBC;IACAb;IACAhB;IACA8B;IACAC;IACAC;IACAC;IACAC;IACAC;MACsBP;AACtB,QAAMQ,gCAA4BC,qBAAa,KAAK;AACpD,QAAM,CAACC,UAAUC,gBAAgBC,WAAW,IAAI1B,QAAQ,MACtDqB,iBAAiBF,OAAOjB,OAAOa,KAAK,CAAC;AAGvCQ,8BAAgB,MAAA;AACd,QAAI,CAACD,0BAA0BX,SAAS;AACtCW,gCAA0BX,UAAU;WAC/B;AACLe,kBAAYL,iBAAiBF,OAAOjB,OAAOa,KAAK,CAAC;;KAGlD,CAACM,gBAAgB,CAAC;AAErB,QAAMM,oBAAoBH,WAAWJ,MAAMQ,eAAeR,MAAMS;AAChE,QAAMC,YAAYN,WAAW,kBAAkB;AAC/C,QAAMO,aAAatB,eAAc;AACjC,QAAMuB,aAAab,QAAQ;AAC3B,QAAMc,YAAY/C,KAAKgD,SAAS;AAEhC,QAAMC,YAAaC,OAAuC;AACxD,QAAIA,EAAEC,QAAQ,KAAK;AACjBZ,qBAAc;;;AAIlB,aACEF,4BAAAA,OAAAA;IAAKe,WAAWlB,MAAMmB;IAAiBC,MAAK;SAC1CjB,4BAAAA,QAAAA;IACEe,WAAWX;IACXc,SAAShB;IACTU;IACAK,MAAK;IACLE,UAAU;kBACEZ;qBACGN;qBACAA,WAAWO,aAAanB;MAExCG,aAASQ,4BAAAA,QAAAA;IAAMe,WAAWlB,MAAMuB;KAAQ5B,OAAK,GAAA,OAC9CQ,4BAAAA,QAAAA;IAAMe,WAAWlB,MAAMwB;KAAc3B,WAAW,GAE/CO,eACCD,4BAAAA,OAAAA;IAAKsB,IAAId;KACN7C,KAAK4D,IAAI,CAACC,aAAaC,cACtBzB,4BAAC0B,YAAU;IACTZ,KAAKU,YAAY,CAAC,KAAKC;IACvBjC,OAAOgC,YAAY,CAAC;IACpB7C,OAAO6C,YAAY,CAAC;IACpB3B;IACAJ,aAAagC,UAAUf;IACvBd,OAAOa;IACPX;IAEH,CAAC,QAGJE,4BAAAA,QAAAA;IACEe,WAAWlB,MAAM8B;IACjBT,SAAShB;IACTU;IACAK,MAAK;IACLE,UAAU;mBACG;kBACDZ;qBACGN;UAInBD,4BAAAA,QAAAA;IAAMe,WAAWlB,MAAMwB;KAAc1B,YAAY,GAChD,CAACF,mBAAeO,4BAAAA,QAAAA;IAAMe,WAAWlB,MAAMwB;SAAqB;AAGnE;AAEA,SAASO,WAAUC,OAAA;MAAC;IAClBrC;IACAb;IACAkB;IACAJ;IACAK;IACAF;MACwBiC;AACxB,SAAOvC,iBAAiB;IACtBE;IACAb;IACAc,aAAaA,eAAe;IAC5BG;IACAF,aAAa;IACbC,cAAc;IACdE;IACAC;IACAnC,MAAMa,OAAOsD,KAAKnD,KAAK,EAAE4C,IAAKT,SAAQ,CAACA,KAAKnC,MAAMmC,GAAyB,CAAC,CAAC;GAC9E;AACH;AAEA,SAASiB,UAASC,OAAA;MAAC;IACjBxC;IACAb;IACAkB;IACAJ;IACAG;IACAE;MAC4BkC;AAC5B,SAAO1C,iBAAiB;IACtBE;IACAb;IACAc,aAAaA,eAAe;IAC5BG;IACAF,aAAa;IACbC,cAAc;IACdE;IACAC;IACAnC,MAAMgB,MAAM4C,IAAKU,aAAY,CAAC5C,QAAW4C,OAAO,CAAC;GAClD;AACH;AAEA,SAASC,mBAAkBC,OAAA;MAAC;IAC1B3C;IACAb;IACAkB;IACAJ;MACqE0C;AACrE,MAAIC,cAAczD;AAClB,MAAI0D,aAAaxC,MAAMyC;AAEvB,MAAI3D,UAAU,MAAM;AAClByD,kBAAc;AACdC,iBAAaxC,MAAM0C;aACV5D,UAAUU,QAAW;AAC9B+C,kBAAc;AACdC,iBAAaxC,MAAM2C;aACVC,SAA2B9D,KAAK,GAAG;AAC5CyD,kBAAW,IAAOzD,KAAAA;AAClB0D,iBAAaxC,MAAMuC;aACVK,UAA4B9D,KAAK,GAAG;AAC7CyD,kBAAczD,QAAQ,SAAS;AAC/B0D,iBAAaxC,MAAM6C;aACVD,SAA2B9D,KAAK,GAAG;AAC5CyD,kBAAczD,MAAMgE,SAAQ;AAC5BN,iBAAaxC,MAAM+C;aACVH,SAA2B9D,KAAK,GAAG;AAC5CyD,kBAAW,GAAMzD,MAAMgE,SAAQ,CAAA;AAC/BN,iBAAaxC,MAAM+C;aACVH,OAAyB9D,KAAK,GAAG;AAC1CyD,kBAAczD,MAAMkE,YAAW;SAC1B;AACLT,kBAAczD,MAAMgE,SAAQ;;AAG9B,MAAInD,UAAU,IAAI;AAChBA,YAAQ;;AAGV,aACEQ,4BAAAA,OAAAA;IAAKe,WAAWlB,MAAMmB;IAAiBC,MAAK;KACzCzB,aAASQ,4BAAAA,QAAAA;IAAMe,WAAWlB,MAAMuB;KAAQ5B,OAAK,GAAA,OAC9CQ,4BAAAA,QAAAA;IAAMe,WAAWsB;KAAaD,WAAW,GACxC,CAAC3C,mBAAeO,4BAAAA,QAAAA;IAAMe,WAAWlB,MAAMwB;SAAqB;AAGnE;AAEA,SAAwBK,WAAWoB,OAA2B;AAC5D,QAAMnE,QAAQmE,MAAMnE;AACpB,MAAI8D,QAA0B9D,KAAK,GAAG;AACpC,eAAOqB,4BAAC+B,WAAS,OAAA,OAAA,CAAA,GAAKe,KAAK,CAAA;;AAG7B,MAAIL,SAA2B9D,KAAK,KAAK,CAAC8D,OAAyB9D,KAAK,GAAG;AACzE,eAAOqB,4BAAC4B,YAAU,OAAA,OAAA,CAAA,GAAKkB,KAAK,CAAA;;AAG9B,aAAO9C,4BAACkC,oBAAkB,OAAA,OAAA,CAAA,GAAKY,KAAK,CAAA;AACtC;;ICvNaC,gBAA4B;EACvCC,WAAWC,OAAO,iBAAiB;EACnCjC,iBAAiBiC,OAAO,qBAAqB;EAC7C7B,OAAO6B,OAAO,aAAa;EAC3BV,WAAWU,OAAO,kBAAkB;EACpCT,gBAAgBS,OAAO,uBAAuB;EAC9Cb,aAAaa,OAAO,oBAAoB;EACxCP,cAAcO,OAAO,qBAAqB;EAC1CL,aAAaK,OAAO,oBAAoB;EACxCX,YAAYW,OAAO,mBAAmB;EACtC5B,aAAa4B,OAAO,mBAAmB;EACvC5C,cAAc4C,OAAO,qBAAqB;EAC1C3C,YAAY2C,OAAO,mBAAmB;EACtCtB,kBAAkBsB,OAAO,yBAAyB;;AAGpD,IAAaC,aAAyB;EACpCF,WAAWC,OAAO,gBAAgB;EAClCjC,iBAAiBiC,OAAO,qBAAqB;EAC7C7B,OAAO6B,OAAO,YAAY;EAC1BV,WAAWU,OAAO,iBAAiB;EACnCT,gBAAgBS,OAAO,sBAAsB;EAC7Cb,aAAaa,OAAO,mBAAmB;EACvCP,cAAcO,OAAO,oBAAoB;EACzCL,aAAaK,OAAO,mBAAmB;EACvCX,YAAYW,OAAO,kBAAkB;EACrC5B,aAAa4B,OAAO,kBAAkB;EACtC5C,cAAc4C,OAAO,oBAAoB;EACzC3C,YAAY2C,OAAO,kBAAkB;EACrCtB,kBAAkBsB,OAAO,wBAAwB;;AAGnD,IAAaE,cAAcA,MAAM;AACjC,IAAaC,oBAAqBxD,WAAkBA,QAAQ;AAE5D,IAAayD,WAAW9D,UAAA;MAAC;IACvB5B;IACAkC,QAAQkD;IACRjD,mBAAmBqD;MACb5D;AACN,aACES,4BAAAA,OAAAA;IAAKe,WAAWlB,MAAMmD;SACpBhD,4BAAC0B,YAAU;IACT/C,OAAOhB;IACPkC;IACAJ,aAAW;IACXG,OAAO;IACPE;IACA;AAGR;",
  "names": ["isBoolean", "data", "Boolean", "isNumber", "Number", "isBigInt", "BigInt", "isDate", "Date", "isString", "String", "isArray", "Array", "isObject", "Object", "useBool", "initialValueCreator", "value", "setValue", "useState", "tooggle", "currentValue", "componentId", "generateNextId", "useComponentId", "useRef", "current", "undefined", "ExpandableObject", "_ref", "field", "lastElement", "openBracket", "closeBracket", "level", "style", "shouldExpandNode", "shouldExpandNodeCalledRef", "React", "expanded", "toggleExpanded", "setExpanded", "expanderIconStyle", "collapseIcon", "expandIcon", "ariaLabel", "contentsId", "childLevel", "lastIndex", "length", "onKeyDown", "e", "key", "className", "basicChildStyle", "role", "onClick", "tabIndex", "label", "punctuation", "id", "map", "dataElement", "index", "DataRender", "collapsedContent", "JsonObject", "_ref2", "keys", "JsonArray", "_ref3", "element", "JsonPrimitiveValue", "_ref4", "stringValue", "valueStyle", "otherValue", "nullValue", "undefinedValue", "DataTypeDetection", "booleanValue", "toString", "numberValue", "toISOString", "props", "defaultStyles", "container", "styles", "darkStyles", "allExpanded", "collapseAllNested", "JsonView"]
}
